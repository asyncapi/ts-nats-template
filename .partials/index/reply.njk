
{% macro reply(defaultContentType, channelName, subscribeMessage, publishMessage, messageDescription) %}
  /**
  *  {{messageDescription}}
  * @param onRequest Called when request recieved.
  * @param onReplyError Called when it was not possible to send the reply.
  */
  public replyTo{{channelName | pascalCase }}(onRequest : (err?: NatsError, msg?: {{ subscribeMessage.uid() | pascalCase }}Message) => {{ publishMessage.uid() | pascalCase }}Message, onReplyError : (err: NatsError) => void): Promise<Subscription> {
    {%- if message | isBinaryPayload(defaultContentType) %}
    Client nc = this.binaryClient;
    {%- endif %}
    {%- if message | isStringPayload(defaultContentType) %}
    Client nc = this.stringClient;
    {%- endif %}
    {%- if message | isJsonPayload(defaultContentType) %}
    Client nc = this.jsonClient;
    {%- endif %}
    return {{ channelName | camelCase }}Channel.reply(onRequest, onReplyError, nc);
  }
{% endmacro %}
