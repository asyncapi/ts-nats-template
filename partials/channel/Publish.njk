
{%- from "./OnSendingData.njk" import OnSendingData %}
{% macro publish(channelName, channelParameters, publishMessage, server, defaultContentType) %}
export function publish(
  message: {{publishMessage | getMessageType}},
  nc: Client
  {% if channelParameters | length %}
    ,{{channelParameters | realizeParametersForChannel}}
  {% endif %}
  ): Promise<void> {
  return new Promise<void>(async (resolve, reject) => {
    try{
      {%- if publishMessage.payload() | messageHasNotNullPayload %}
      {{OnSendingData(true, publishMessage, defaultContentType)}}
      await nc.publish({{channelParameters | realizeChannelName(channelName)}}, dataToSend);
      {%- else %}
      await nc.publish({{channelParameters | realizeChannelName(channelName)}}, null);
      {%- endif %}
      resolve();
    }catch(e){
      reject(NatsTypescriptTemplateError.errorForCode(ErrorCode.INTERNAL_NATS_TS_ERROR, e));
    }
  });
};
{% endmacro %}
