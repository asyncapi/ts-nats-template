
{% macro publish(channelName, parameters, publishMessage, server) %}

export function publish(
  requestMessage: {{publishMessage.uid() | pascalCase}}Message,
  nc: Client,
  {% if parameters | length %}
    {{parameters | realizeParametersForChannel}}
  {% endif %}
  ): Promise<void> {
  return new Promise<void>(async (resolve, reject) => {
    if (nc) {
      try{
        let publishDataHooks = Hooks.getHooks(Hooks.AvailableHooks.BeforeSendingData) as Hooks.BeforeSendingDataHook[];
        var dataToPublish;
        for(let hook of publishDataHooks){
          dataToPublish = hook(requestMessage);
        }
        nc.publish({{parameters | realizeChannelName(channelName)}}, dataToPublish);
        resolve();
      }catch(e){
        reject(e);
      }
    }else{
      reject(new Error("Nats client is not connected"));
    }
  });
};
{% endmacro %}
